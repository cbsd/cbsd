#
#             __________ _____ ____ 
#            / ____/ __ ) ___// __ \
#           / /   / __  \__ \/ / / /
#          / /___/ /_/ /__/ / /_/ / 
#          \____/_____/____/_____/  
#
#           Main CBSD profile file
#
# ############################################

##############################################
# Global variables
# ############################################

# Clean general global variables
unset oarch over ostable arch target_arch ver stable

# Version
product="CBSD"
myversion="13.0.18a"

# CBSD distribution path
distdir="/usr/local/cbsd"

# Working directory,
# where all user data is stored
if [ -z "${workdir}" ]; then
	if [ -z "${cbsd_workdir}" ]; then
		echo "no workdir"
	else
		export workdir="${cbsd_workdir}"
	fi
	exit 1
fi

# Subroutine filepaths
subrdir="${distdir}/subr"
cbsdinit="${subrdir}/cbsdinit.subr"
subr="${subrdir}/nc.subr"
dialog="${subrdir}/dialog.subr"
tools="${subrdir}/tools.subr"
mdtools="${subrdir}/mdtools.subr"
jfs="${subrdir}/jfs.subr"
nodes="${subrdir}/nodes.subr"
initenv="${subrdir}/initenv.subr"
system="${subrdir}/system.subr"
strings="${subrdir}/strings.subr"

# Various filepaths
nodenamefile="${workdir}/nodename"
inventory="${workdir}/nc.inventory"
nodedescr="${workdir}/node.desc"
libdir="${distdir}/lib"
miscdir="${distdir}/misc"
jobdir="${distdir}/job"
srcdir="${workdir}/src"
tmpdir="${workdir}/tmp"
ftmpdir="${workdir}/ftmp"
importdir="${workdir}/import"
exportdir="${workdir}/export"
basejaildir="${workdir}/basejail"
basejailpref="base"
jaildatadir="${workdir}/jails-data"
jailfstabdir="${workdir}/jails-fstab"
jailrcconfdir="${workdir}/jails-rcconf"
jailfstabpref="fstab."
jaildir="${workdir}/jails"
jaildatapref="data"
jailsysdir="${workdir}/jails-system"
bindir="${distdir}/bin"
etcdir="${workdir}/etc"
jailctldir="${distdir}/jailctl"
nodectl="${distdir}/nodectl"
rcddir="${distdir}/rc.d"
sbindir="${distdir}/sbin"
systemdir="${distdir}/system"
moduledir="${workdir}/modules"
nodedir="${workdir}/nodes"
distmoduledir="${distdir}/modules"
toolsdir="${distdir}/tools"
upgradedir="${distdir}/upgrade"
vardir="${workdir}/var"
spooldir="${vardir}/spool"
taskdir="${spooldir}/task"
rundir="${vardir}/run"
maildir="${vardir}/mail"
logdir="${vardir}/log"
sharedir="${workdir}/share"
distsharedir="${distdir}/share"
dbdir="${vardir}/db"
gelidir="${dbdir}/geli"
localcbsdconffile="cbsd.conf"
localcbsdconf="${distdir}/${localcbsdconffile}"
sudoexecdir="${distdir}/sudoexec"
systemsudoexecdir="${distdir}/sudoexec"
rsshdir="${workdir}/.rssh"
sshdir="${workdir}/.ssh"
templateldir="${workdir}/template"
TMPDIR="${tmpdir}"		# used by mktemp

# Other settings
cbsduser="cbsd"
production="0"
fwcount_st="99"
fwcount_end="2000"
fwexpose_st="2001"
fwexpose_end="2999"
greeting="node"

# External source for online doc
docversion="13.x"
cbsddocsrc="https://www.bsdstore.ru/en/${docversion}"

##############################################
# Set PATH
# ############################################
# modules must be first for opportunity to have a module commands greater priority than the original CBSD command.
# This makes it possible to write a 3rd party modules with altered functionality of the original code.
# subr is directory containing include files.
export PATH=${moduledir}:${subrdir}:${bindir}:${sbindir}:${toolsdir}:${jailctldir}:${nodectl}:${systemdir}:${distdir}/tui:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

##############################################
# Process special command-line arguments
# ############################################
case $CBSD_APP in
version|--version)
	version
	exit 0
	;;
--help)
	exec help
	;;
esac

##############################################
# Conditional options
# ############################################

[ -r "${nodenamefile}" ] && nodename=$( cat ${nodenamefile} | awk '{printf $1}' )

if [ -n "${CBSD_DEBUG}" ]; then
	export NOCOLOR=1
	NOCOLOR=1
	export debug=1
	set -o xtrace
fi

if [ -n "${NOINTER}" ]; then
	export NOINTER=1
	export inter=0
fi

if [ "$1" = "--pause_after_err" ]; then
	export pause_after_err=1
fi

if [ -z "${ECHO}" ]; then
	if [ -n "${NOCOLOR}" ]; then
		ECHO="echo"
	else
		ECHO="echo -e"
		if [ -r "${subrdir}/ansiicolor.subr" ]; then
			. ${subrdir}/ansiicolor.subr
			[ -r "${workdir}/etc/color.conf" ] && . "${workdir}/etc/color.conf"
		fi
	fi
fi

[ -f "${inventory}" ] && . ${inventory}
# Load _CMD variable: Default and custom by platform name
[ -z "${platform}" ] && platform=$( uname -s )
# Overwrite $platform to HardenedBSD if we have /usr/sbin/hbsd-update:
[ -e "/usr/sbin/hbsd-update" ] && platform="HardenedBSD"
[ -f ${workdir}/cmd.subr ] && . ${workdir}/cmd.subr
[ -f "${subrdir}/${platform}.subr" ] && . ${subrdir}/${platform}.subr

if [ -z "${freebsdhostversion}" ]; then
	export freebsdhostversion=$( ${miscdir}/elf_tables --ver /bin/sh 2>/dev/null )
	[ -z "${freebsdhostversion}" ] && export freebsdhostversion="0"
fi
[ -f "${workdir}/etc/cbsd.conf" ] && . ${workdir}/etc/cbsd.conf


##############################################
# Permissions
# ############################################

umask 002
